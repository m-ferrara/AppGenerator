<?php class Entity_model extends CI_Model {	function __construct() 	{ 	parent::__construct(); 	}  function get_all () { $dbResult = $this->db->get( "entity" );return $dbResult->result();}function get ( $getArray ) { $dbWhere = $this->db->where( $getArray ); $dbResult = $this->db->get( "entity" );if ($dbResult->num_rows()==1) {return $dbResult->row();} else if ($dbResult->num_rows()>1) {return $dbResult->result(); }else {return false; }}function put ( $putArray, $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbUpdate = $this->db->update( "entity", $putArray );if ($dbUpdate) {$affectedRows = $this->db->affected_rows();if ($affectedRows == 0) { return false; } else { return true; }}else {return false;}}function post ( $postArray ) { $dbInsert = $this->db->insert( "entity", $postArray );if ($dbInsert) {return $this->db->insert_id();}else {return false;}}function delete ( $whereArray ) { $dbWhere = $this->db->where( $whereArray );$dbDelete = $this->db->delete( "entity" );$affectedRows = $this->db->affected_rows();if ($affectedRows == 0) { return false; } else { return true; }}function validate( $requestPayload , $requestMethod ) { switch($requestMethod){case "get": $validStatus = $this->getValidator( $requestPayload ); return $validStatus; break; case "put": $validStatus = $this->putValidator( $requestPayload ); return $validStatus; break; case "post": $validStatus = $this->postValidator( $requestPayload ); return $validStatus; break; case "delete": $validStatus = $this->deleteValidator( $requestPayload ); return $validStatus; break; } }function getValidator( $RequestPayload )  {
// Validation Rules 
$VldtnRules = array("name"=>"alfanum", "status"=>"number", "table"=>"alfanum", "id"=>"number");$MandatoryRules = array();$MandatoryOrRules = array(array("id"));
// Sanatization Rules 
$SntnRules = array("name"=>"alfanum", "status"=>"number", "table"=>"alfanum", "id"=>"number");$UniqueRules = array();$validator = new Custom_Validator($VldtnRules, $MandatoryRules, $MandatoryOrRules, $SntnRules, $UniqueRules);if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function putValidator( $RequestPayload )  {
// Validation Rules 
$VldtnRules = array("id"=>"number", "table"=>"alfanum", "name"=>"alfanum", "status"=>"number");$MandatoryRules = array("id");$MandatoryOrRules = array();
// Sanatization Rules 
$SntnRules = array("id"=>"number", "table"=>"alfanum", "name"=>"alfanum", "status"=>"number");$UniqueRules = array("AND_CONDITIONAL"=>array("TABLE"=>"entity","KEYS"=>array("table", "name")));$validator = new Custom_Validator($VldtnRules, $MandatoryRules, $MandatoryOrRules, $SntnRules, $UniqueRules);if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function postValidator( $RequestPayload )  {
// Validation Rules 
$VldtnRules = array("table"=>"alfanum", "name"=>"alfanum", "status"=>"number");$MandatoryRules = array("table", "name");$MandatoryOrRules = array();
// Sanatization Rules 
$SntnRules = array("table"=>"alfanum", "name"=>"alfanum", "status"=>"number");$UniqueRules = array("AND_CONDITIONAL"=>array("TABLE"=>"entity","KEYS"=>array("table", "name")));$validator = new Custom_Validator($VldtnRules, $MandatoryRules, $MandatoryOrRules, $SntnRules, $UniqueRules);if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}function deleteValidator( $RequestPayload )  {
// Validation Rules 
$VldtnRules = array("id"=>"number");$MandatoryRules = array("id");$MandatoryOrRules = array();
// Sanatization Rules 
$SntnRules = array("id"=>"number");$UniqueRules = array();$validator = new Custom_Validator($VldtnRules, $MandatoryRules, $MandatoryOrRules, $SntnRules, $UniqueRules);if ($validator->validate($RequestPayload)) {$sanatizedPayload = $validator->sanatize($RequestPayload);return array("isValid" => true, "payload" => $sanatizedPayload);} else {return array("isValid" => false, "errorMsg" => $validator->getJSON());}}}/* end of Entity_model.php */